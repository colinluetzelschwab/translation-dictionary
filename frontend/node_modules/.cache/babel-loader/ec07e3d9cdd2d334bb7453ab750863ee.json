{"ast":null,"code":"var _jsxFileName = \"/Users/colinlutzelschwab/workspace/translation-dictionary/frontend/src/components/TranslationWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ADD_ERROR_MESSAGE, ADD_SUCCESS_MESSAGE, DELETE_ERROR_MESSAGE, DELETE_SUCCESS_MESSAGE, HTTP_DELETE, HTTP_GET, HTTP_POST, HTTP_PUT, HTTP_STATUS_CREATED, REACT_APP_BACKEND_URL, UPDATE_ERROR_MESSAGE, UPDATE_SUCCESS_MESSAGE } from \"../utils/apiUtils\";\nimport TranslationTable from \"./TranslationTable\";\nimport { Order } from \"../utils/types\";\nimport { Button, Grid, MuiThemeProvider, Snackbar } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Search from \"./Search\";\nimport { APP_ID } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AlertType;\n\n(function (AlertType) {\n  AlertType[AlertType[\"success\"] = 0] = \"success\";\n  AlertType[AlertType[\"error\"] = 1] = \"error\";\n})(AlertType || (AlertType = {}));\n\nconst emptyAlert = {\n  isVisible: false,\n  message: '',\n  type: undefined\n};\nconst emptyTranslation = {\n  id: undefined,\n  appId: '',\n  context: '',\n  textId: '',\n  stage: '',\n  de: '',\n  fr: '',\n  it: '',\n  en: '',\n  lastCall: undefined\n};\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#3f51b5',\n      main: '#2425aa',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#d32f2f',\n      dark: '#ba000d',\n      contrastText: '#fff'\n    }\n  }\n});\n\nfunction TranslationWrapper() {\n  _s();\n\n  const [translations, setTranslations] = useState([]);\n  const [alert, setAlert] = useState(emptyAlert);\n  const [order, setOrder] = React.useState(Order.asc);\n  const [orderBy, setOrderBy] = React.useState(APP_ID);\n  useEffect(() => {\n    resetTable();\n  }, []);\n  const TEXT_ID_REGEX = new RegExp(/^[a-z][\\w-]*(?:\\.[\\w-]+)*$/);\n\n  function fetchTranslations() {\n    return fetch(REACT_APP_BACKEND_URL + '/translation', {\n      method: HTTP_GET\n    }).then(response => response.json()).catch(error => showErrorAlert(error.toString()));\n  }\n\n  function updateTranslation(translation) {\n    if (isUserInputValid(translation)) {\n      fetch(REACT_APP_BACKEND_URL + '/translation', {\n        method: HTTP_POST,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(translation)\n      }).then(response => {\n        if (response.ok && response.status === 200) {\n          showSuccessAlert(UPDATE_SUCCESS_MESSAGE);\n        } else {\n          throw new Error();\n        }\n      }).then(() => fetchTranslations().then(translations => setTranslations(sortTranslations(translations, order, orderBy)))).catch(() => showErrorAlert(UPDATE_ERROR_MESSAGE));\n    }\n  }\n\n  function deleteTranslation(translation) {\n    fetch(REACT_APP_BACKEND_URL + '/translation', {\n      method: HTTP_DELETE,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(translation)\n    }).then(response => {\n      if (response.ok && response.status === 200) {\n        showSuccessAlert(DELETE_SUCCESS_MESSAGE);\n      } else {\n        throw new Error();\n      }\n    }).then(() => fetchTranslations().then(translations => setTranslations(sortTranslations(translations, order, orderBy)))).catch(() => showErrorAlert(DELETE_ERROR_MESSAGE));\n  }\n\n  function addTranslation() {\n    fetch(REACT_APP_BACKEND_URL + '/translation', {\n      method: HTTP_PUT,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(emptyTranslation)\n    }).then(response => {\n      if (response.status === HTTP_STATUS_CREATED) {\n        showSuccessAlert(ADD_SUCCESS_MESSAGE);\n      } else {\n        throw new Error();\n      }\n    }).then(() => fetchTranslations().then(translations => setTranslations(sortTranslations(translations, Order.asc, APP_ID)))).catch(() => showErrorAlert(ADD_ERROR_MESSAGE));\n  }\n\n  function isUserInputValid(translation) {\n    return validateTextId(translation.textId) && validateAppId(translation.appId) && validateContext(translation.context) && validateStage(translation.stage);\n  }\n\n  function validateTextId(textId) {\n    textId = textId.trim();\n\n    if (textId === '') {\n      showErrorAlert('Das Feld Text-ID darf nicht leer sein');\n      return false;\n    } else if (!textId.match(TEXT_ID_REGEX)) {\n      showErrorAlert('Das Feld Text-ID darf nur duch Punkte getrennt werden');\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateAppId(appId) {\n    if (appId.trim() === '') {\n      showErrorAlert('Das Feld App-ID darf nicht leer sein');\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateContext(context) {\n    if (context.trim() === '') {\n      showErrorAlert('Das Feld Kontext darf nicht leer sein');\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateStage(stage) {\n    if (stage.trim() === '') {\n      showErrorAlert('Das Feld Stage darf nicht leer sein');\n      return false;\n    }\n\n    return true;\n  }\n\n  function showErrorAlert(message) {\n    const alert = {\n      isVisible: true,\n      message: message,\n      type: AlertType.error\n    };\n    setAlert(alert);\n  }\n\n  function showSuccessAlert(message) {\n    const alert = {\n      isVisible: true,\n      message: message,\n      type: AlertType.success\n    };\n    setAlert(alert);\n  }\n\n  function getComparator(a, b, order, orderBy) {\n    return order === Order.asc ? compare(a, b, order, orderBy) : compare(b, a, order, orderBy);\n  }\n\n  function compare(a, b, order, orderBy) {\n    let valueA = a[orderBy];\n    let valueB = b[orderBy];\n\n    if (valueA === null) {\n      return -1;\n    } else if (valueB === null) {\n      return 1;\n    }\n\n    return valueA.localeCompare(valueB);\n  }\n\n  function handleSort(property) {\n    const isAsc = orderBy === property && order === Order.asc;\n    setTranslations(sortTranslations(translations, isAsc ? Order.desc : Order.asc, property));\n  }\n\n  function sortTranslations(translations, order, orderBy) {\n    setOrderBy(orderBy);\n    setOrder(order);\n    return translations.sort((a, b) => getComparator(a, b, order, orderBy));\n  }\n\n  function resetTable() {\n    fetchTranslations().then(translations => setTranslations(sortTranslations(translations, Order.asc, APP_ID)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"translationWrapper\",\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: alert.isVisible && alert.type === AlertType.error,\n        autoHideDuration: null,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setAlert(emptyAlert),\n            className: \"alertCloseIcon\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), alert.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: alert.isVisible && alert.type === AlertType.success,\n        autoHideDuration: null,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setAlert(emptyAlert),\n            className: \"alertCloseIcon\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Erfolgreich\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), alert.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        className: \"gridContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            setTranslations: setTranslations,\n            sortTranslations: sortTranslations,\n            showErrorAlert: showErrorAlert,\n            showSuccessAlert: showSuccessAlert,\n            resetTable: resetTable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            id: \"addButton\",\n            onClick: addTranslation,\n            children: \"Neue \\xDCbersetzung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TranslationTable, {\n        translations: translations,\n        updateTranslation: updateTranslation,\n        deleteTranslation: deleteTranslation,\n        handleSort: handleSort,\n        setTranslations: setTranslations,\n        order: order,\n        orderBy: orderBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TranslationWrapper, \"2uHcQqt0bFqh7rht8atKUsT+c3c=\");\n\n_c = TranslationWrapper;\nexport default TranslationWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslationWrapper\");","map":{"version":3,"names":["React","useEffect","useState","ADD_ERROR_MESSAGE","ADD_SUCCESS_MESSAGE","DELETE_ERROR_MESSAGE","DELETE_SUCCESS_MESSAGE","HTTP_DELETE","HTTP_GET","HTTP_POST","HTTP_PUT","HTTP_STATUS_CREATED","REACT_APP_BACKEND_URL","UPDATE_ERROR_MESSAGE","UPDATE_SUCCESS_MESSAGE","TranslationTable","Order","Button","Grid","MuiThemeProvider","Snackbar","Alert","AlertTitle","createMuiTheme","IconButton","CloseIcon","Search","APP_ID","AlertType","emptyAlert","isVisible","message","type","undefined","emptyTranslation","id","appId","context","textId","stage","de","fr","it","en","lastCall","theme","palette","primary","light","main","dark","contrastText","secondary","TranslationWrapper","translations","setTranslations","alert","setAlert","order","setOrder","asc","orderBy","setOrderBy","resetTable","TEXT_ID_REGEX","RegExp","fetchTranslations","fetch","method","then","response","json","catch","error","showErrorAlert","toString","updateTranslation","translation","isUserInputValid","headers","body","JSON","stringify","ok","status","showSuccessAlert","Error","sortTranslations","deleteTranslation","addTranslation","validateTextId","validateAppId","validateContext","validateStage","trim","match","success","getComparator","a","b","compare","valueA","valueB","localeCompare","handleSort","property","isAsc","desc","sort","vertical","horizontal"],"sources":["/Users/colinlutzelschwab/workspace/translation-dictionary/frontend/src/components/TranslationWrapper.tsx"],"sourcesContent":["import React, {ReactElement, useEffect, useState} from 'react';\nimport {\n    ADD_ERROR_MESSAGE,\n    ADD_SUCCESS_MESSAGE,\n    DELETE_ERROR_MESSAGE,\n    DELETE_SUCCESS_MESSAGE,\n    HTTP_DELETE,\n    HTTP_GET,\n    HTTP_POST,\n    HTTP_PUT,\n    HTTP_STATUS_CREATED,\n    REACT_APP_BACKEND_URL,\n    UPDATE_ERROR_MESSAGE,\n    UPDATE_SUCCESS_MESSAGE\n} from \"../utils/apiUtils\";\nimport TranslationTable from \"./TranslationTable\";\nimport {Order, Translation} from \"../utils/types\";\nimport {Button, Grid, MuiThemeProvider, Snackbar} from \"@material-ui/core\";\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Search from \"./Search\";\nimport {APP_ID} from \"../utils/constants\";\n\ninterface AlertInterface {\n    isVisible: boolean,\n    message: string,\n    type?: AlertType\n}\n\nenum AlertType {\n    success,\n    error\n}\n\nconst emptyAlert: AlertInterface = {\n    isVisible: false,\n    message: '',\n    type: undefined\n}\nconst emptyTranslation: Translation = {\n    id: undefined,\n    appId: '',\n    context: '',\n    textId: '',\n    stage: '',\n    de: '',\n    fr: '',\n    it: '',\n    en: '',\n    lastCall: undefined\n}\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#3f51b5', main: '#2425aa', dark: '#002884', contrastText: '#fff',\n        }, secondary: {\n            light: '#ff7961',\n            main: '#d32f2f',\n            dark: '#ba000d',\n            contrastText: '#fff',\n        },\n    },\n});\n\nfunction TranslationWrapper(): ReactElement {\n    const [translations, setTranslations] = useState<Array<Translation>>([]);\n    const [alert, setAlert] = useState(emptyAlert);\n    const [order, setOrder] = React.useState<Order>(Order.asc);\n    const [orderBy, setOrderBy] = React.useState<keyof Translation>(APP_ID);\n    useEffect(() => {\n        resetTable()\n    }, [])\n    const TEXT_ID_REGEX: RegExp = new RegExp(/^[a-z][\\w-]*(?:\\.[\\w-]+)*$/)\n\n    function fetchTranslations(): Promise<any> {\n        return fetch(REACT_APP_BACKEND_URL + '/translation', {\n            method: HTTP_GET,\n        })\n            .then(response => response.json())\n            .catch((error) => showErrorAlert(error.toString()));\n    }\n\n\n    function updateTranslation(translation: Translation): void {\n        if (isUserInputValid(translation)) {\n            fetch(REACT_APP_BACKEND_URL + '/translation', {\n                method: HTTP_POST,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(translation)\n            })\n                .then(response => {\n                    if (response.ok && response.status === 200) {\n                        showSuccessAlert(UPDATE_SUCCESS_MESSAGE)\n                    } else {\n                        throw new Error();\n                    }\n                })\n                .then(() => fetchTranslations()\n                    .then((translations) => setTranslations(sortTranslations(translations, order, orderBy))))\n                .catch(() => showErrorAlert(UPDATE_ERROR_MESSAGE));\n        }\n    }\n\n    function deleteTranslation(translation: Translation): void {\n        fetch(REACT_APP_BACKEND_URL + '/translation', {\n            method: HTTP_DELETE,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(translation)\n        })\n            .then(response => {\n                if (response.ok && response.status === 200) {\n                    showSuccessAlert(DELETE_SUCCESS_MESSAGE)\n                } else {\n                    throw new Error();\n                }\n            })\n            .then(() => fetchTranslations()\n                .then((translations) => setTranslations(sortTranslations(translations, order, orderBy))))\n            .catch(() => showErrorAlert(DELETE_ERROR_MESSAGE));\n    }\n\n\n    function addTranslation(): void {\n        fetch(REACT_APP_BACKEND_URL + '/translation', {\n            method: HTTP_PUT,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(emptyTranslation)\n        })\n            .then(response => {\n                if (response.status === HTTP_STATUS_CREATED) {\n                    showSuccessAlert(ADD_SUCCESS_MESSAGE)\n                } else {\n                    throw new Error();\n                }\n            })\n            .then(() => fetchTranslations()\n                .then((translations) => setTranslations(sortTranslations(translations, Order.asc, APP_ID))))\n            .catch(() => showErrorAlert(ADD_ERROR_MESSAGE));\n    }\n\n\n    function isUserInputValid(translation: Translation): boolean {\n        return validateTextId(translation.textId) && validateAppId(translation.appId) && validateContext(translation.context) &&\n            validateStage(translation.stage);\n    }\n\n    function validateTextId(textId: string): boolean {\n        textId = textId.trim()\n        if (textId === '') {\n            showErrorAlert('Das Feld Text-ID darf nicht leer sein')\n            return false;\n        } else if (!textId.match(TEXT_ID_REGEX)) {\n            showErrorAlert('Das Feld Text-ID darf nur duch Punkte getrennt werden')\n            return false;\n        }\n        return true;\n    }\n\n    function validateAppId(appId: string): boolean {\n        if (appId.trim() === '') {\n            showErrorAlert('Das Feld App-ID darf nicht leer sein')\n            return false;\n        }\n        return true;\n    }\n\n    function validateContext(context: string): boolean {\n        if (context.trim() === '') {\n            showErrorAlert('Das Feld Kontext darf nicht leer sein')\n            return false;\n        }\n        return true;\n    }\n\n    function validateStage(stage: string): boolean {\n        if (stage.trim() === '') {\n            showErrorAlert('Das Feld Stage darf nicht leer sein')\n            return false;\n        }\n        return true;\n    }\n\n    function showErrorAlert(message: string): void {\n        const alert: AlertInterface = {\n            isVisible: true,\n            message: message,\n            type: AlertType.error\n        }\n        setAlert(alert)\n    }\n\n\n    function showSuccessAlert(message: string): void {\n        const alert: AlertInterface = {\n            isVisible: true,\n            message: message,\n            type: AlertType.success\n        }\n        setAlert(alert)\n    }\n\n    function getComparator(a: Translation, b: Translation, order: Order, orderBy: keyof Translation): number {\n        return order === Order.asc ? compare(a, b, order, orderBy) : compare(b, a, order, orderBy)\n    }\n\n    function compare(a: Translation, b: Translation, order: Order, orderBy: keyof Translation): number {\n        let valueA: string = a[orderBy] as string;\n        let valueB: string = b[orderBy] as string;\n        if (valueA === null) {\n            return -1\n        } else if (valueB === null) {\n            return 1\n        }\n        return valueA.localeCompare(valueB);\n    }\n\n    function handleSort(property: keyof Translation): void {\n        const isAsc = orderBy === property && order === Order.asc;\n        setTranslations(sortTranslations(translations, isAsc ? Order.desc : Order.asc, property));\n    }\n\n    function sortTranslations(translations: Array<Translation>, order: Order, orderBy: keyof Translation): Array<Translation> {\n        setOrderBy(orderBy)\n        setOrder(order)\n        return translations.sort((a, b) => getComparator(a, b, order, orderBy))\n    }\n\n    function resetTable(): void {\n        fetchTranslations().then((translations) => setTranslations(sortTranslations(translations, Order.asc, APP_ID)));\n    }\n\n\n    return (\n        <div className={\"translationWrapper\"}>\n            <MuiThemeProvider theme={theme}>\n                <Snackbar\n                    anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                    open={alert.isVisible && alert.type === AlertType.error}\n                    autoHideDuration={null}\n                >\n                    <Alert severity=\"error\" variant={\"filled\"}>\n                        <IconButton onClick={() => setAlert(emptyAlert)} className={\"alertCloseIcon\"}>\n                            <CloseIcon/>\n                        </IconButton>\n                        <AlertTitle>Error</AlertTitle>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n                <Snackbar\n                    anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                    open={alert.isVisible && alert.type === AlertType.success}\n                    autoHideDuration={null}\n                >\n                    <Alert severity=\"success\" variant={\"filled\"}>\n                        <IconButton onClick={() => setAlert(emptyAlert)} className={\"alertCloseIcon\"}>\n                            <CloseIcon/>\n                        </IconButton>\n                        <AlertTitle>Erfolgreich</AlertTitle>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n                <Grid container direction={\"row\"} className={\"gridContainer\"}>\n                    <Grid item xs={10}>\n                        <Search setTranslations={setTranslations} sortTranslations={sortTranslations}\n                                showErrorAlert={showErrorAlert} showSuccessAlert={showSuccessAlert}\n                                resetTable={resetTable}/>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button variant=\"contained\" color=\"primary\" id={\"addButton\"} onClick={addTranslation}>\n                            Neue Übersetzung\n                        </Button>\n                    </Grid>\n                </Grid>\n                <TranslationTable translations={translations} updateTranslation={updateTranslation}\n                                  deleteTranslation={deleteTranslation}\n                                  handleSort={handleSort} setTranslations={setTranslations}\n                                  order={order} orderBy={orderBy}\n                />\n            </MuiThemeProvider>\n        </div>\n\n    );\n}\n\nexport default TranslationWrapper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}